import java.util.Scanner;

import org.omg.CORBA.*;
import org.omg.CosNaming.*;
import org.omg.CosNaming.NamingContextPackage.*;
import org.omg.PortableServer.*;
import org.omg.PortableServer.POA;

import Restaurant.*;
import Restaurant.Order;

public class Client {
    static RestaurantInterface restaurantImpl;
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        try {
            // create and initialize the ORB
            ORB orb = ORB.init(args, null);

            // get the root naming context
            org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService");
            NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef);

            // resolve the restaurant object reference in the naming context
            String name = "Restaurant";
            restaurantImpl = RestaurantInterfaceHelper.narrow(ncRef.resolve_str(name));

            System.out.println("Welcome to the restaurant system!");

            // allow the user to choose the customer or manager interface
            System.out.println("Enter 1 for customer interface, 2 for manager interface:");
            int choice = scanner.nextInt();

            if (choice == 1) {
                customerInterface();
            } else if (choice == 2) {
                managerInterface();
            } else {
                System.out.println("Invalid choice. Exiting...");
            }
        } catch (Exception e) {
            System.out.println("ERROR : " + e);
            e.printStackTrace(System.out);
        }
    }

    static void customerInterface() {
        try {
            // display the menu
            System.out.println("Menu:");
            System.out.println("1. Fried Chicken ($5)");
            System.out.println("2. Cola ($1)");

            // prompt the user to enter their name
            System.out.println("Enter your name:");
            String name = scanner.next();

            // prompt the user to enter their order
            System.out.println("Enter the quantity of fried chicken:");
            int numFriedChicken = scanner.nextInt();
            System.out.println("Enter the quantity of cola:");
            int numCola = scanner.nextInt();

            // create the order
            Order order = new Order(name, numFriedChicken, numCola);

            // place the order and get the confirmation message
            String message = restaurantImpl.placeOrder(order);

            // display the confirmation message
            System.out.println(message);

            // prompt the user to check their order status
            System.out.println("Enter 1 to check your order status, or 2 to exit:");
            int choice = scanner.nextInt();

            if (choice == 1) {
                // get the order status and display it
                Order status = restaurantImpl.checkOrderStatus(name);
                System.out.println("Order status:");
                System.out.println(status);
            } else {
                System.out.println("Exiting...");
            }
        } catch (Exception e) {
            System.out.println("ERROR : " + e);
            e.printStackTrace(System.out);
        }
    }

    static void managerInterface() {
        try {
            // get the current orders and display them
            Order[] orders = restaurantImpl.getCurrentOrders();
            System.out.println("Current orders:");
            for (Order order : orders) {
                System.out.println(order);
            }
        } catch (Exception e) {
            System.out.println("ERROR : " + e);
            e.printStackTrace(System.out);
        }
    }
}
